{"file":"login-DBxarG_V.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,UAAM,SAAS,kBAAmB;AAClC,UAAM,SAAS,iBAAkB;AACjC,UAAM,OAAO;AAEb,UAAM,eAAe,IAAK,EAAI;AAS9B,UAAM,QAAQ,YAAY;AACxB,WAAM,YAAc;AACpB,YAAM,QAAQ,MAAM,OAAO,KAAK;AAAA,QAC9B,EAAE,UAAU,SAAU;AAAA,QACtB,EAAE,YAAY,OAAO,6BAA8B;AAAA,MACpD;AACD,UAAK,MAAM,OAAQ;AACjB,gBAAQ,IAAK,KAAO;AACpB,qBAAa,QAAQ,sFAAuF,KAAK;AAAA,MAClH;AAAA,IACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA,UAAM,cAAc,eAAgB;AACpC,UAAM,SAAS,kBAAmB;AAClC,UAAM,QAAO,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM,OAAO,KAAK,SAAQ;AACvC,UAAM,WAAgB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,OAAO,KAAK,YAAW;AAG7C,SAAK,kCAAM,SAAN,mBAAY,MAAO;AACtB,kBAAY,SAAQ,kCAAM,SAAN,mBAAY;AAAA,IAClC,YAAY,8CAAS,SAAT,mBAAe,YAAf,mBAAwB,MAAO;AACzC,kBAAY,SAAQ,8CAAS,SAAT,mBAAe,YAAf,mBAAwB;AAAA,IAC9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["_withAsyncContext"],"sources":["../../../../components/supabase/LoginWithGoogle.vue","../../../../pages/login.vue"],"sourcesContent":["<template>\n  <div>\n    <template v-if=\"errorMessage\">\n      <Message class=\"mb-4\" severity=\"error\">\n        Sorry, there was a problem logging in to your account:\n        {{ errorMessage }}\n      </Message>\n    </template>\n    <Button\n      :label=\"label\"\n      icon=\"pi pi-google\"\n      class=\"p-button-outlined w-full mb-2\"\n      @click=\"login\"\n    />\n  </div>\n</template>\n\n<script setup>\nconst client = useSupabaseClient()\nconst config = useRuntimeConfig()\nconst emit = defineEmits( [ 'closePanel' ] )\n\nconst errorMessage = ref( '' )\n\nconst props = defineProps( {\n  label: {\n    type: String,\n    default: 'Sign In With Google',\n  },\n} )\n\nconst login = async () => {\n  emit( 'closePanel' )\n  const error = await client.auth.signInWithOAuth(\n    { provider: 'google' },\n    { redirectTo: config.supabaseAuthSignInRedirectTo }\n  )\n  if ( error.value ) {\n    console.log( error )\n    errorMessage.value = `Sorry, there was a problem creating this account. Please try again! Error message: ${ error }`\n  }\n}\n</script>\n","<template>\n  <div class=\"sign-in\">\n    <h1 class=\"mb-3 flex align-items-center\">\n      Connecting empty spaces with people who need them.\n    </h1>\n    <p class=\"mb-4 lg:mb-6\">Enter your credentials to access your account.</p>\n    <supabase-login-with-email class=\"mb-4\" />\n    <p class=\"like-h6\">\n      <nuxt-link to=\"/forgot-password\">Forgot Password?</nuxt-link>\n    </p>\n    <Divider class=\"mb-2 pt-6 w-4 lg:w-2\" />\n    <p class=\"mb-3\">Or sign in with social:</p>\n    <supabase-login-with-google />\n    <Divider class=\"mb-4 pt-6 w-4 lg:w-2\" />\n    <p class=\"mb-3\">Or sign in with a magic link:</p>\n    <supabase-login-with-magic-link />\n  </div>\n</template>\n\n<script setup>\nimport { useCurrentUser } from '~/composables/states'\n\nconst currentUser = useCurrentUser()\nconst client = useSupabaseClient()\nconst user = await client.auth.getUser()\nconst session = await client.auth.getSession()\n\n// check supabase session for logged in user\nif ( user?.data?.user ) {\n  currentUser.value = user?.data?.user\n} else if ( session?.data?.session?.user ) {\n  currentUser.value = session?.data?.session?.user\n}\n</script>\n"],"version":3}