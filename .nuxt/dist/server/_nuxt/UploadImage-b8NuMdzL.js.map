{"version":3,"file":"UploadImage-b8NuMdzL.js","sources":["../../../../components/ManageUserProfile.vue","../../../../components/supabase/UploadImage.vue"],"sourcesContent":["<template>\n  <div v-if=\"profile && profile.length > 0\">\n    <h6 class=\"mb-2\">Date of Birth</h6>\n    <Calendar\n      v-model=\"birthday\"\n      :maxDate=\"maxBirthdayDate\"\n      showIcon\n      placeholder=\"Select A Date\"\n      class=\"mb-2 w-full\"\n      @date-select=\"updateProfile\"\n    />\n    <p class=\"small font-italic mb-4\">\n      Your date of birth is required - you must be 18 or older to book or list\n      on Just Day Space.\n    </p>\n    <h6 class=\"mb-2\">Name</h6>\n    <InputText\n      v-model=\"fullName\"\n      placeholder=\"Enter your full name here\"\n      @change=\"updateProfile\"\n      class=\"mb-4\"\n    />\n    <h6 class=\"mb-2\">Bio</h6>\n    <Textarea\n      v-model=\"bio\"\n      rows=\"5\"\n      placeholder=\"Enter a brief paragraph about yourself - this may lead to more bookings!\"\n      @change=\"updateProfile\"\n    />\n  </div>\n  <div class=\"changes-saved-toast\">\n    <Message\n      v-if=\"successMessage\"\n      class=\"mb-4\"\n      severity=\"success\"\n      :closable=\"false\"\n      :sticky=\"false\"\n    >\n      Your changes have been saved.\n    </Message>\n  </div>\n</template>\n\n<script setup>\nconst currentUser = useSupabaseUser()\nconst currentUserProfile = useCurrentUserProfile()\nconst supabase = useSupabaseClient()\n\nconst fullName = ref( null )\nconst birthday = ref( null )\nconst bio = ref( null )\nconst profile = ref( [] )\nconst successMessage = ref( false )\n\n// set maxBirthdayDate to 18 years ago\nconst maxBirthdayDate = new Date()\nmaxBirthdayDate.setFullYear( maxBirthdayDate.getFullYear() - 18 )\n\n// get the profile for the logged in user\nlet { data } = await supabase\n  .from( 'profiles' )\n  .select( '*' )\n  .eq( 'id', currentUser.value.id )\n  .limit( 1 )\nif ( data ) {\n  profile.value = data\n  fullName.value = data[ 0 ]?.full_name\n  birthday.value = data[ 0 ]?.birthday\n  bio.value = data[ 0 ]?.bio\n}\n\nconst updateProfile = async () => {\n  successMessage.value = false\n  const { error } = await supabase\n    .from( 'profiles' )\n    .upsert( {\n      id: currentUser.value.id,\n      updated_at: new Date().toISOString(),\n      full_name: fullName.value,\n      birthday: birthday.value,\n      bio: bio.value,\n    } )\n    .match( { id: currentUser.value.id } )\n  if ( error ) {\n    console.log( 'updateProfile error', error )\n  } else {\n    successMessage.value = true\n    currentUserProfile.value.full_name = fullName.value\n    currentUserProfile.value.birthday = birthday.value\n    currentUserProfile.value.bio = bio.value\n  }\n}\n</script>\n","<template>\n  <div class=\"upload-image\">\n    <h6 class=\"mb-4\">Profile Image</h6>\n    <ProgressSpinner class=\"inline-block mb-4\" v-if=\"uploading\" />\n    <Avatar\n      v-if=\"imageUrl\"\n      :image=\"imageUrl\"\n      size=\"xlarge\"\n      shape=\"circle\"\n      alt=\"profile photo\"\n      class=\"mb-4\"\n    />\n    <p v-if=\"currentUser.app_metadata.provider === 'google'\">\n      <em>\n        You are using your <strong>{{ currentUser.email }}</strong> Google\n        account to login. To change your profile picture, you must do so through\n        your Google account.\n      </em>\n    </p>\n    <template v-else>\n      <p v-if=\"!imageUrl\" class=\"mb-3\">\n        You have not added a profile image yet.\n      </p>\n      <div class=\"flex\">\n        <FileUpload\n          mode=\"basic\"\n          :customUpload=\"true\"\n          @uploader=\"uploadImage\"\n          accept=\"image/*\"\n          :maxFileSize=\"1000000\"\n          :fileLimit=\"1\"\n          choose-label=\"Update\"\n          :auto=\"true\"\n          upload-icon=\"pi pi-image\"\n          class=\"mr-2 fit-width black\"\n          style=\"height: 36px; text-transform: capitalize\"\n        />\n        <Button\n          v-if=\"imageUrl\"\n          @click=\"deleteImage\"\n          class=\"black p-button-rounded\"\n          icon=\"pi pi-trash\"\n        />\n      </div>\n      <p v-if=\"!imageUrl\" class=\"small mt-3\">\n        <em>\n          Image files must be less than 1MB in size, and should ideally be a\n          square.<br />jpg, png, webp, and gif files are accepted.\n        </em>\n      </p>\n    </template>\n    <template v-if=\"errorMessage\">\n      <Message class=\"mt-4\" severity=\"error\">\n        {{ errorMessage }}\n      </Message>\n    </template>\n    <template v-if=\"successMessage\">\n      <Message :sticky=\"false\" :life=\"5000\" class=\"mt-4\" severity=\"success\">\n        {{ successMessage }}\n      </Message>\n    </template>\n  </div>\n</template>\n\n<script setup>\nconst emit = defineEmits( [ 'imageUploaded' ] )\n\nconst currentUser = useSupabaseUser()\nconst currentUserProfile = useCurrentUserProfile()\nconst supabase = useSupabaseClient()\n\nconst props = defineProps( {\n  image: {\n    type: String,\n    default: '',\n    required: true,\n  },\n} )\n\nconst uploading = ref( false )\nconst errorMessage = ref()\nconst successMessage = ref()\nconst imageUrl = ref( props.image )\n\nconst uploadImage = async ( event ) => {\n  try {\n    uploading.value = true\n    const file = event.files[ 0 ]\n    const fileExt = file.name.split( '.' ).pop()\n    const filePath = `${ props.userId }-${ Math.random() }.${ fileExt }`\n\n    const { error: uploadError } = await supabase.storage\n      .from( 'avatars' )\n      .upload( filePath, file )\n\n    if ( uploadError ) throw uploadError\n\n    const { data: imagePublicUrl } = await supabase.storage\n      .from( 'avatars' )\n      .getPublicUrl( filePath )\n\n    imageUrl.value = imagePublicUrl.publicUrl\n\n    const { error } = await supabase\n      .from( 'profiles' )\n      .upsert( {\n        id: currentUser.value.id,\n        updated_at: new Date().toISOString(),\n        avatar_url: imageUrl.value,\n      } )\n      .match( { id: currentUser.value.id } )\n    if ( error ) {\n      console.log( error )\n      errorMessage.value = `Error: ${ error }`\n    } else {\n      successMessage.value = 'Success! Your image has been saved.'\n      currentUserProfile.value.avatar_url = imageUrl.value\n      emit( 'imageUploaded' )\n    }\n  } catch ( error ) {\n    errorMessage.value = `Error: ${ error }`\n  } finally {\n    uploading.value = false\n  }\n}\n\n// delete the image from the database and storage\nconst deleteImage = async () => {\n  const { error } = await supabase\n    .from( 'profiles' )\n    .upsert( {\n      id: currentUser.value.id,\n      updated_at: new Date().toISOString(),\n      avatar_url: null,\n    } )\n    .match( { id: currentUser.value.id } )\n  if ( error ) {\n    console.log( error )\n    errorMessage.value = `Error: ${ error }`\n  } else {\n    successMessage.value = 'Success! Your photo has been deleted.'\n    imageUrl.value = null\n    currentUserProfile.value.avatar_url = null\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\nimg {\n  height: 200px;\n  width: 200px;\n  border-radius: 50%;\n  border: solid 1px var(--light-gray);\n}\n.upload-image-button {\n  height: 36px;\n}\n.p-avatar.p-avatar-circle {\n  width: 200px;\n  height: 200px;\n}\n</style>\n"],"names":["_withAsyncContext"],"mappings":"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"}