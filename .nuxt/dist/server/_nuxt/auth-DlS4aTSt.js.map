{"version":3,"file":"auth-DlS4aTSt.js","sources":["../../../../middleware/auth.js"],"sourcesContent":["import {\n  useCurrentUserProfile\n} from '~/composables/states'\n\nexport default defineNuxtRouteMiddleware( async () => {\n  const currentUser = useSupabaseUser()\n  const currentUserProfile = useCurrentUserProfile()\n  const client = useSupabaseClient()\n  let user = await client.auth.getUser()\n  const session = await client.auth.getSession()\n\n  client.auth.onAuthStateChange( async () => {\n    user = await client.auth.getUser()\n  } )\n\n  // function that gets a user profile\n  const getProfile = async () => {\n    const {\n      data,\n      error\n    } = await client\n      .from( 'profiles' )\n      .select( '*' )\n      .eq( 'id', currentUser.value.id )\n      .single()\n    if ( error ) {\n      console.error( error )\n    } else if ( data ) {\n      currentUserProfile.value = data\n    }\n  }\n\n  // check supabase session for logged in user\n  if ( user?.data?.user ) {\n    currentUser.value = user?.data?.user\n  } else if ( session?.data?.session?.user ) {\n    currentUser.value = session?.data?.session?.user\n  }\n\n  // if the user is not authorized, redirect them to the login page\n  // if they are, get their profile data\n  if ( !currentUser.value ) {\n    return navigateTo( '/' )\n  } else if ( !currentUserProfile.value ) {\n    getProfile()\n  }\n} )"],"names":["__executeAsync"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAKA,MAAe,OAAA,0BAAwB,YAAA;;AAAA,MAAA,QAAA;AACrC,QAAM,cAAc,gBAAiB;AACrC,QAAM,qBAAqB,sBAAO;AAClC,QAAM,SAAW,kBAAA;AACjB,MAAI,QAAS,CAAC,QAAC,SAAA,IAAAA,aAAA,MAAA,OAAS,KAAK,QAAO,CAAE,GAAG,SAAK,MAAA,QAAA,UAAA,GAAA;AAChD,QAAA,WAAA,CAAA,QAAA,SAAA,IAAAA,aAAA,MAAA,OAAA,KAAA,WAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAEE,SAAO,KAAK,kBAAmB,YAAK;AAClC,WAAC,MAAA,OAAA,KAAA,QAAA;AAAA,EACL,CAAA;AAGE,QAAM,aAAG,YAAA;AACP,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACD,IAAG,MAAM,OACP,KAAM,UAAO,EACb,OAAQ,GAAK,EACb,GAAI,MAAI,YAAA,MAAA,EAAA,EACR,OAAQ;AACX,QAAK,OAAQ;AACX,cAAQ,MAAO,KAAG;AAAA,IACnB,WAAW,MAAO;AAClB,yBAAA,QAAA;AAAA,IACF;AAAA,EACH;AAGE,OAAK,kCAAM,SAAN,mBAAY,MAAO;AACtB,gBAAY,SAAQ,kCAAM,SAAN,mBAAY;AAAA,EACjC,YAAW,8CAAS,SAAT,mBAAe,YAAf,mBAAwB,MAAO;AAC1C,gBAAA,SAAA,8CAAA,SAAA,mBAAA,YAAA,mBAAA;AAAA,EACH;AAIE,MAAK,CAAC,YAAY,OAAQ;AACxB,WAAO,WAAY,GAAK;AAAA,EAC5B,WAAc,CAAC,mBAAC,OAAA;AACb,eAAA;AAAA,EACF;;"}